@model IEnumerable<S4T_HaTinh.Models.sp_GetUserByDonVi_Role_Result>
@using S4T_HaTinh.Models;
@{
    ViewBag.Title = "DANH SÁCH NGƯỜI DÙNG";
    var listTrangThai = MvcApplication.ListTrangThai();
    //var listNhomDonVi = new SelectList(MvcApplication.ListNhomDonVi(), "DanhMuc_ID", "TenDanhMuc");
    var slListDVCap1 = new SelectList(ViewBag.ListDonViCap1, "DonVi_ID", "TenDonVi");
    var listRole = new SelectList(ViewBag.ListRole, "Name", "TenHienThi");
    var listDonVi = (IEnumerable<Dm_DonVi>)ViewBag.ListDonVi;
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Index", "HT_User", FormMethod.Get))
{
    <p>
        @*Nhóm đơn vị : @Html.DropDownList("ddlNhomDonVi", listNhomDonVi, "Tất cả")*@
        Đơn vị cấp 1 : @Html.DropDownList("ddlDonViCap1", slListDVCap1, "Tất cả", new { @onchange = "NhomDonVi_OnChange()" })
        Đơn vị : 
            <select id="ddlDonVi"><option value="">Tất cả</option></select>
        Vai trò : @Html.DropDownList("roleName",listRole, "Tất cả")
        <input type="text" name="status" value="1" style="display:none" />
        <input type="submit" value="Tìm kiếm" />
    </p>
}

<p>
    @Html.ActionLink("Tạo mới", "Create")
</p>
<table class="tableDefault">
    <tr>
        <th>
            STT
        </th>
        <th>
            @Html.DisplayNameFor(model => model.HoVaTen)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UserName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DonVi_ID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TrangThai)
        </th>
        <th></th>
    </tr>

    @if (Model != null)
    {
        int i = 1;
        foreach (var item in Model)
        {
            <tr>
                <td>@i</td>
                <td>
                    @Html.DisplayFor(modelItem => item.HoVaTen)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TenDonVi)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => listTrangThai.FirstOrDefault(o => o.DanhMuc_ID == item.TrangThai).TenDanhMuc)
                </td>
                <td>
                    @Html.ActionLink("Sửa", "Edit", new { id = item.Id }) |
                    @*@Html.ActionLink("Không sử dụng", "Delete", new { id = item.Id })*@
                    <a onclick="Delete('@item.Id')">Không sử dụng</a>
                </td>
            </tr>
            i++;
        }
    }
    else
    {
        <tr>Không tìm thấy dữ liệu</tr>
    }
</table>

<script type="text/javascript">
    $(document).ready(function () {
        if($("#ddlDonViCap1").val() != ""){
            NhomDonVi_OnChange();
        }        
    });

    // Lấy danh sách đơn vị theo nhóm đơn vị và đơn vị cấp 1
    function NhomDonVi_OnChange() {
        if ($("#ddlDonViCap1").val() != "") {
            $.post("/Ht_User/NhomDonVi_OnChange", { "ddlDonViCap1": $("#ddlDonViCap1").val() }).done(function (data) {
                if (data.msg == null) {
                    $("#ddlDonVi").html(data.danhSach);
                } else {
                    alert(data.msg);
                }
            });
        } else {
            $("#ddlDonVi").html("<option value=''>Tất cả</option>");
        }
    }

    function Delete(id) {
        if (!confirm("Bạn có chắc chắn không dùng dữ liệu này?")) return;

        $.ajax({
            type: 'POST',
            url: "HT_User/Delete?id=" + id,
            success: function (data) {
                if (data.msg == "ok") {
                    //alert("Đã xóa thành công");
                    location.reload();
                } else {
                    alert(data.msg);
                }
            },
            async: true
        });
    }
</script>